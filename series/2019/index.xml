<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2019 on 개발자 지호</title><link>/series/2019/</link><description>Recent content in 2019 on 개발자 지호</description><generator>Hugo -- gohugo.io</generator><copyright>&amp;copy; 2021 &lt;a href="4ppl3Hun73r.github.io/">지호&lt;/a></copyright><lastBuildDate>Fri, 27 Dec 2019 00:00:00 +0900</lastBuildDate><atom:link href="/series/2019/index.xml" rel="self" type="application/rss+xml"/><item><title>애자일 관련 도서 카이젠 저니를 읽고</title><link>/posts/2019/12/kaizenjourneybook/</link><pubDate>Fri, 27 Dec 2019 00:00:00 +0900</pubDate><guid>/posts/2019/12/kaizenjourneybook/</guid><description>일하는 방식에 대해서 고민을 하던중 애자일에 대한 책 한권을 읽어봐야 겠다는 생각이 들어서 관련 도서를 검색하다가 이 책을 발견했다. 한 일주일에 걸쳐서 읽었는데 애자일이 존재하</description></item><item><title>내가 자주 사용하는 Docker Command 정리</title><link>/posts/2019/12/dockercommand/</link><pubDate>Thu, 26 Dec 2019 00:00:00 +0900</pubDate><guid>/posts/2019/12/dockercommand/</guid><description>docker ps -a docker container 보기 docker exec -it {container ID} {exec command} docker 컨테이너에 명령어 실행 $ docker exec -it c903213b1 /bin/bash docker logs {container ID} docker 컨테이너 로그 확인 컨테이너 로그 위치 /var/lib/docker/containers/{container ID}/{container Name}-json.log 컨테이너 로그 지우기 $ truncate -s 0 /var/lib/docker/containers/*/*-json.log</description></item><item><title>Spring One re:Cap Seoul 2019 참석</title><link>/posts/2019/12/springonerecap/</link><pubDate>Thu, 19 Dec 2019 00:00:00 +0900</pubDate><guid>/posts/2019/12/springonerecap/</guid><description>12월 18일에 2019년도 Spring One re:Cap 행사에 참석을 했습니다. 전체적인 순서는 Keynote 정리 -&amp;gt; 기술 세션 정리 -&amp;gt; Live Coding with Mark Heckler -&amp;gt; Apache Geode Summit re:Cap -&amp;gt; Concourse / Spinnaker 로 진행 되었습니다. Live Coding 순서부터 회</description></item><item><title>Nginx 302 Redirect 설정시 Upstream Name으로 이동할때 처리</title><link>/posts/2019/12/nginx302redirectproxysetting/</link><pubDate>Mon, 09 Dec 2019 00:00:00 +0900</pubDate><guid>/posts/2019/12/nginx302redirectproxysetting/</guid><description>upstream target { server 127.0.0.1; ... } ... location / { proxy_pass http://target; } 위와 같이 설정했을때 기본적은 proxy 는 문제 없이 동작하는데 302 처리할때는 url이 http://target 으로 사용자에게 처리되는 경우가 발생했었다. 아래와 같이 h</description></item><item><title>Apache Httpd Module Compile</title><link>/posts/2019/11/apachemodulecompile/</link><pubDate>Sun, 17 Nov 2019 00:00:00 +0900</pubDate><guid>/posts/2019/11/apachemodulecompile/</guid><description>Apache 가 설치되어 있을때 추가로 모듈을 설치해야 할때 Apache Source Code Download Apache Http Server Download Page 에서 httpd-{version}.tar 다운로드 ex) wget http://apache.mirror.cdnetworks.com//httpd/httpd-2.4.41.tar.gz Compile mod_include.so 가 필요할때 컴파일로 모듈 만들기 $APACHE_HOME/bin/apxs -i -a -c $APACHE_SOURCE_HOME/modules/filters/mod_include.c</description></item><item><title>Google Analytics 붙이기</title><link>/posts/2019/11/addgoogleanalytics/</link><pubDate>Sun, 10 Nov 2019 00:00:00 +0900</pubDate><guid>/posts/2019/11/addgoogleanalytics/</guid><description>Google Analytics 계정 만들기 무료 계정 생성 을 통해서 계정을 만든다 생성 자체는 별거 없긴 한데 혹시 모르니 스크린샷을 남겨 놓는다. 생성 이후 GA ID 확인 신규 계정이 생성되고 계정이 생성되자 마</description></item><item><title>puppeteer 동작을 영상으로 녹화 시키기</title><link>/posts/2019/11/puppeteerrecoding/</link><pubDate>Sun, 10 Nov 2019 00:00:00 +0900</pubDate><guid>/posts/2019/11/puppeteerrecoding/</guid><description>puppeteer 를 이용해서 작업을 진행하다 보면 진행사항을 보고 싶은 경우가 있다. 개발 중이거나 테스트시에는 직접 브라우저를 띄워서 볼수 있지만 실제 운영 환경에 적용을 하게 되면 직접 눈으</description></item><item><title>Github Page 를 만들어 보자</title><link>/posts/2019/11/creategithubpage/</link><pubDate>Sat, 09 Nov 2019 00:00:00 +0900</pubDate><guid>/posts/2019/11/creategithubpage/</guid><description>신규 레파지토리 생성 신규 레포파지토리 생성 레파지토리 이름은 반드시 {profile id}.github.io 로 생성해야 한다. GitHub Pages 활성화 각 레파지토리의 세팅 페이지에서 ( ex: https://github.com/4ppl3Hun73r/4ppl3Hun73r.github.io/settings ) 에서 GitHub Pages Theme 를 선택해주게 되</description></item><item><title>개발 블로그를 다시 시작하면서</title><link>/posts/2019/11/createblog/</link><pubDate>Fri, 01 Nov 2019 00:00:00 +0900</pubDate><guid>/posts/2019/11/createblog/</guid><description>taetaetae 님의 개발자가 글을 써야 하는 이유 를 보고 이번에는 제대로 블로그를 해봐야 겠다는 마음으로 블로그를 만드는 것 부터 다시 시작해 봤다. 기존에 운영해 봤던 블로그들에 대한 회고 네</description></item></channel></rss>